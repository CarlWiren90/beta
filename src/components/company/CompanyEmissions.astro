---
import { getCompanyName, type CompanyData } from '@/data/companyData'
import { Card } from '../ui/card'
import Scope3Emissions from './Scope3Emissions.astro'
import { cn } from '@/lib/utils'

interface Props {
  company: CompanyData
  year: number
}

const { company, year } = Astro.props

const emissions = company.emissions[year]

const totalBiogenicEmissions = emissions
  ? (emissions.scope1.biogenic || 0) +
    (emissions.scope2.biogenic || 0) +
    (emissions.scope3.biogenic || 0)
  : 0

const scopeEmissionsList = emissions
  ? [
      {
        title: 'Egna utsläpp (scope 1)',
        description:
          'Utsläpp från egna källor eller kontrollerade av organisationen.',
        value: emissions.scope1.emissions,
        verified: emissions.scope1.verified,
      },
      {
        title: 'Indirekta (scope 2)',
        description:
          'Indirekta utsläpp från produktion av köpt el, ånga, värme och kyla som konsumeras av organisationen.',
        value: emissions.scope2.emissions,
        verified: emissions.scope2.verified,
      },
      {
        title: 'Värdekedjan (scope 3)',
        description: 'Indirekta utsläpp från organisationens värdekedja.',
        value: emissions.scope3.emissions,
        verified: emissions.scope3.verified,
      },
    ]
  : []

const biogenicEmissions = {
  title: 'Biogena utsläpp',
  description:
    'Biogena utsläpp är koldioxidutsläpp som uppstår från icke-fossila (sk. förnybara) källor, som tex förbränning av biobränslen eller biprodukter vid pappersmassatillverkning. Enligt GHG-protokollet redovisas dessa utsläpp separat från scope 1-3, eftersom de är aktiv del av kolets kretslopp.',
  value: totalBiogenicEmissions,
  verified: null,
}

const companyName = getCompanyName(company)
---

<Card class="grid gap-8" level={1}>
  <h2
    class="flex items-center justify-between pt-4 text-3xl leading-none tracking-tight md:pt-0"
  >
    Utsläpp 2023 <span class="pr-4 text-base text-muted xs:text-xl"
      >(ton CO₂e)</span
    >
  </h2>
  {
    scopeEmissionsList.length ? (
      <div class="grid gap-4">
        {scopeEmissionsList.map((emission) =>
          emission.value ? (
            <div class="flex items-center justify-between">
              <div>
                <h4 class="font-medium">{emission.title}</h4>
                {emission.description && (
                  <p class="text-sm text-muted">{emission.description}</p>
                )}
              </div>
              <span
                class={cn(
                  'rounded-full px-4 py-2 font-bold md:text-base',
                  emission.verified
                    ? 'bg-blue-250 text-blue-950'
                    : 'bg-gray-800',
                )}
              >
                {emission.value.toLocaleString('sv-SE')}
              </span>
            </div>
          ) : null,
        )}
      </div>
    ) : null
  }

  <Scope3Emissions emissions={emissions.scope3.categories} {companyName} />

  {
    totalBiogenicEmissions ? (
      <Card level={2}>
        <h4 class="flex items-center justify-between pb-4 text-2xl">
          {biogenicEmissions.title}
          <span class="pr-4 text-base text-muted xs:text-lg">(ton CO₂e)</span>
        </h4>
        <div class="flex items-center justify-between gap-4">
          <p class="text-sm text-muted">{biogenicEmissions.description}</p>
          <span
            class={cn(
              'self-start rounded-full px-4 py-2 font-bold',
              biogenicEmissions.verified
                ? 'bg-blue-250 text-blue-950'
                : 'bg-gray-800',
            )}
          >
            {biogenicEmissions.value.toLocaleString('sv-SE')}
          </span>
        </div>
      </Card>
    ) : null
  }
</Card>
