---
import { getWikidataEmissionsYear, type CompanyData } from '@/data/companyData'
import { Card } from '../ui/card'
import Scope3Emissions from './Scope3Emissions.astro'
import VerifiedBadge from '../VerifiedBadge.astro'

interface Props {
  company: CompanyData
  year: number
}

const { company, year } = Astro.props

const emissions = company.emissions[year]
const wiki = getWikidataEmissionsYear(company.wikidata, year)
const facit = company.facit?.emissions?.[year]

const totalBiogenicEmissions = getTotalBiogenicEmissionsAndVerified()

function getEmissionScopeAndVerified(scope: 'scope1' | 'scope2' | 'scope3') {
  const facitValue = facit?.[scope]?.emissions
  const wikiValue = wiki?.[scope]?.emissions
  const value = emissions[scope].emissions
  return {
    value: facitValue ?? wikiValue ?? value,
    verified: facitValue !== null || wikiValue !== null,
  }
}

function getTotalBiogenicEmissionsAndVerified() {
  const facitValue = facit?.totalBiogenic
  const value = emissions
    ? (emissions.scope1.biogenic || 0) +
      (emissions.scope2.biogenic || 0) +
      (emissions.scope3.biogenic || 0)
    : 0

  return {
    value: facitValue ?? value,
    verified: Number.isFinite(Number(facitValue)) ? true : false,
  }
}

const scopeEmissionsList = emissions
  ? [
      {
        title: 'Egna utsläpp (scope 1)',
        description:
          'Utsläpp från egna källor eller kontrollerade av organisationen.',
        ...getEmissionScopeAndVerified('scope1'),
      },
      {
        title: 'Indirekta (scope 2)',
        description:
          'Indirekta utsläpp från produktion av köpt el, ånga, värme och kyla som konsumeras av organisationen.',
        ...getEmissionScopeAndVerified('scope2'),
      },
      {
        title: 'Värdekedjan (scope 3)',
        description: 'Indirekta utsläpp från organisationens värdekedja.',
        ...getEmissionScopeAndVerified('scope3'),
      },
    ]
  : []

const biogenicEmissions = {
  title: 'Biogena utsläpp',
  description:
    'Biogena utsläpp är koldioxidutsläpp som uppstår från icke-fossila (sk. förnybara) källor, som tex förbränning av biobränslen eller biprodukter vid pappersmassatillverkning. Enligt GHG-protokollet redovisas dessa utsläpp separat från scope 1-3, eftersom de är aktiv del av kolets kretslopp.',
  ...totalBiogenicEmissions,
}
---

<Card class="grid gap-8" level={1}>
  <h2
    class="flex items-center justify-between pt-4 text-3xl leading-none tracking-tight md:pt-0"
  >
    Rapporterade utsläpp 2023 <span class="pr-4 text-base text-muted xs:text-xl"
      >(ton CO₂e)</span
    >
  </h2>
  {
    scopeEmissionsList.length ? (
      <div class="grid gap-4">
        {scopeEmissionsList.map((emission) =>
          emission.value ? (
            <div class="flex items-center justify-between">
              <div>
                <h4 class="flex items-center gap-1 font-medium">
                  {emission.title} {emission.verified && <VerifiedBadge />}
                </h4>
                {emission.description && (
                  <p class="text-sm text-muted">{emission.description}</p>
                )}
              </div>
              <span class="rounded-full bg-gray-800 px-4 py-2 font-bold md:text-base">
                {emission.value.toLocaleString('sv-SE', {
                  maximumFractionDigits: 0,
                })}
              </span>
            </div>
          ) : null,
        )}
      </div>
    ) : null
  }

  <Scope3Emissions {company} {year} />

  {
    biogenicEmissions.value ? (
      <Card level={2}>
        <h4 class="flex items-center justify-between pb-4 text-2xl">
          <span class="flex items-center gap-1">
            {biogenicEmissions.title}{' '}
            {biogenicEmissions.verified && <VerifiedBadge />}
          </span>
          <span class="pr-4 text-base text-muted xs:text-lg">(ton CO₂e)</span>
        </h4>
        <div class="flex items-center justify-between gap-4">
          <p class="text-sm text-muted">{biogenicEmissions.description}</p>
          <span class="self-start rounded-full bg-gray-800 px-4 py-2 font-bold">
            {biogenicEmissions.value.toLocaleString('sv-SE', {
              maximumFractionDigits: 0,
            })}
          </span>
        </div>
      </Card>
    ) : null
  }
</Card>
