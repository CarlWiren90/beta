---
import { getCompanyName, type CompanyData } from '@/data/companyData'
import { Card } from '../ui/card'
import CompanyFactSection from './CompanyFactSection.astro'

interface Props {
  company: CompanyData
  year: number
}

const { company, year } = Astro.props

/**
 * Get the reporting period.
 *
 * For fiscal years following the calendar year, show the last reported year.
 * For non-calendar fiscal years, use special formatting
 */
function getPeriod(company: CompanyData) {
  const latestYearReported = Math.max.apply(
    0,
    Object.keys(company.emissions ?? {}).map(Number),
  )

  return company.fiscalYear && company.fiscalYear.startMonth !== 1
    ? `${latestYearReported - 1}/${latestYearReported}`
    : latestYearReported
}
---

<Card class="text-sm" level={1}>
  <h1
    class="text-balance pb-4 pt-4 text-4xl leading-none tracking-tight md:pt-0 lg:text-5xl"
  >
    {getCompanyName(company)}
  </h1>
  <p class="text-muted">{company.description}</p>

  <div class="grid gap-4 pt-4 sm:grid-cols-2">
    {
      // TODO: When moving this into the card level 2 and changing styling, we can remove the class prop from the CompanyFactSection
      company.industryNace.division.name && (
        <CompanyFactSection
          title="Bransch"
          data={company.industryNace.division.name}
          class="col-span-full flex flex-wrap justify-between gap-2"
        />
      )
    }

    <Card class="flex flex-col gap-2" level={2}>
      {
        company.baseFacts[year]?.turnover && (
          // TODO: Use the last available year instead of hard coded year
          <CompanyFactSection
            title={`Omsättning (${year})`}
            data={
              company.baseFacts[year].turnover.toLocaleString('sv-SE') +
              ' ' +
              company.baseFacts[year].unit
            }
          />
        )
      }
      {
        company.baseFacts[year]?.employees && (
          // TODO: Use the last available year instead of hard coded year
          <CompanyFactSection
            title={`Anställda (${year})`}
            data={company.baseFacts[year].employees.toLocaleString('sv-SE')}
          />
        )
      }

      <a href={company.url} class="self-start text-sm text-blue-500 underline">
        Läs hållbarhetsrapport för {getPeriod(company)}
      </a>
    </Card>

    <!-- NOTE: Maybe add total emissions in this card instead -->
    <!-- <Card level={2} /> -->
  </div>
</Card>
