---
import type { CompanyData } from '@/data/companyData'
import { Card } from '../ui/card'
import CompanyFactSection from './CompanyFactSection.astro'

interface Props {
  company: CompanyData
  year: number
}

const { company, year } = Astro.props

/**
 * Get the reporting period.
 *
 * For fiscal years following the calendar year, show the last reported year.
 * For non-calendar fiscal years, use special formatting
 */
function getPeriod(company: CompanyData) {
  const latestYearReported = Math.max.apply(
    0,
    Object.keys(company.emissions ?? {}).map(Number),
  )

  return company.fiscalYear && company.fiscalYear.startMonth !== 1
    ? `${latestYearReported - 1}/${latestYearReported}`
    : latestYearReported
}
---

<div class="grid gap-4 pt-4 sm:grid-cols-2">
  {
    company.industryNace.division.name && (
      <CompanyFactSection
        title="Bransch"
        data={company.industryNace.division.name}
        class="col-span-full flex flex-wrap justify-between gap-2"
      />
    )
  }

  <Card class="flex flex-col gap-4" level={2}>
    {
      company.baseFacts[year]?.turnover && (
        <CompanyFactSection
          title="Omsättning"
          data={
            company.baseFacts[year].turnover.toLocaleString('sv-SE') +
            ' ' +
            company.baseFacts[year].unit
          }
        />
      )
    }
    {
      company.baseFacts[year]?.employees && (
        <CompanyFactSection
          title="Anställda"
          data={company.baseFacts[year].employees.toLocaleString('sv-SE')}
        />
      )
    }

    <CompanyFactSection title="År" data={getPeriod(company)} />
  </Card>

  <!-- NOTE: Maybe add total emissions in this card instead -->
  <Card level={2} />
</div>
