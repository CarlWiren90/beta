---
import { type Municipality } from '@/data/municipalityTypes'
import { Card } from '../ui/card'

interface Props {
  municipality: Municipality
}

const { municipality } = Astro.props
---

<Card class="text-sm" level={1}>
  <h1
    class="text-balance pb-4 pt-4 text-4xl leading-none tracking-tight md:pt-0 lg:text-5xl"
  >
    {municipality.Name}
  </h1>
  <p class="text-muted">{municipality.County}</p>

  <div class="grid gap-4 pt-4 md:grid-cols-2">
    <Card class="flex flex-col justify-between gap-2" level={2}>
      {
        municipality.BudgetRunsOut && (
          <div class="flex flex-wrap items-center justify-between gap-x-4 gap-y-1 text-sm">
            <h3>Koldioxidbudget tar slut</h3>
            <p class="text-sm text-red-500">{municipality.BudgetRunsOut}</p>
          </div>
        )
      }

      {
        municipality.HitNetZero && (
          <div class="flex flex-wrap items-center justify-between gap-x-4 gap-y-1 text-sm">
            <h3>Når nettonollutsläpp</h3>
            <p class="text-sm text-orange-250">{municipality.HitNetZero}</p>
          </div>
        )
      }
      {
        municipality.Population && (
          <div class="flex flex-wrap items-center justify-between gap-x-4 gap-y-1 text-sm">
            <h3>Utsläppsminskning för att klara Parisavtalet</h3>
            <p class="text-sm text-muted">{municipality.Population}</p>
          </div>
        )
      }

      {
        municipality.ClimatePlan.Link ? (
          <span>
            Läs{' '}
            <a
              href={municipality.ClimatePlan.Link}
              class="self-start text-sm text-blue-500 underline"
            >
              klimatplanen
            </a>
          </span>
        ) : (
          <p>Kommunen saknar klimatplan</p>
        )
      }
    </Card>

    <!-- {
      isNumber(latestEmissions?.emissions?.calculatedTotalEmissions) && (
        <Card level={2} class="flex flex-col justify-between gap-4">
          <div class="flex items-start justify-between">
            <h3 class="flex items-center gap-1">
              Totala utsläpp {getFormattedReportingPeriod(latestEmissions)}{' '}
              {/* {Boolean(
                latestEmissions.emissions.calculatedTotalEmissions.metadata
                  .verifiedBy,
              ) && <VerifiedBadge />} */}
            </h3>
            <span class="text-muted">(ton CO₂e)</span>
          </div>

          <p class="text-3xl leading-none tracking-tight text-orange-250 sm:text-4xl md:text-5xl lg:text-6xl">
            {latestEmissions.emissions.calculatedTotalEmissions.toLocaleString(
              'sv-SE',
              {
                maximumFractionDigits: 0,
              },
            )}
          </p>
        </Card>
      )
    } -->
  </div>
</Card>
